[
  {
    "file": "experiments/example.js",
    "name": "Name of your experiment",
    "description": "Explains the what and the why. What is the main idea? What is the purpose? Describes the coding process and implementation choices and gives a high level system overview."
  },
  {
    "file": "experiments/noise_example1.js",
    "name": "Moving Landscape",
    "description": "This example is based of the Perlin Noise Example from the lecture(slide 36). I really liked the look of it, so I expirimented with it. What I wanted to do is, to add some movement to the landscape. Now every single layer of the landscape is moving differently due to the offset. The coding process wasnt very complicated because some parts were already there from the example. I was chaching values and the look of the landscape which brought me to my second noise example."
  },
  {
    "file": "experiments/noise_example2.js",
    "name": "Moving Mountains",
    "description": "This project is based of the Perlin Noise as well and an extention of the fist example. Since I was playing aroung with the Value I found different variations of the noise and came to the conclusion that i wanted to create a mountain landscape. Moving aswell. I changed the color a bit and also the values when the layers where generated. To understand what changed, I added comments behind every important line of code. That way everyone can understand what the values do."
  },
  {
    "file": "experiments/grid_example1.js",
    "name": "Pixelparty",
    "description": "For this Porject I took an example from the lecture 'Grid in a grid'. My intentions where to animate the grid and give it some color. I chose three different colors and made sure i stay under the 50% coloring. This way only 50% of a square a colored and the rest is white. The process was easy because I already had most of the code and just had to add a color array and animate it."
  },
  {
    "file": "experiments/grid_example2.js",
    "name": "Hover Disco",
    "description": "In this example you can hover over each square and it colours in random colors. I wanted to make an interactive example. I wanted to keep it relativly simple so I took the code from the previous example and just added the components that where needed to make it interactive. "
  },
  {
    "file": "experiments/spiral.js",
    "name": "Spiral",
    "description": "This art piece visualizes a dynamic field of lines traced by a swarm of virtual “agents.” Each agent is followingo an invisible flow field in a circular pattern around the center. The code is pretty similar to the example we had in the lecture about flow fields. The only thing I changed, was the colour of each agent and how the field is generated. The process of this piece wasn't too cimplicated. The only tricky part was using the PI function and make the agents move in a circle."
  }, 
  {
    "file": "experiments/flowerfield.js",
    "name": "Flowerfield",
    "description": "This piece represents a field of flowers. I began by creating a simple field of vertical lines going up from the bottom, symbolizing grass.I added flowers made of ellipses, experimenting with their rotation until I achieved a design I liked. The colors and positions of the flowers are randomized, as are the positions of the leaves. For the flower design, I drew some inspiration from the live-coding flower example we had in class. "
  },
  {
    "file": "experiments/honmoon.js",
    "name": "Honmoon - Kp Demon Hunters",
    "description": "This piece of art is inspired by the so called 'Honmoon' from the movie 'KP Demon Hunters'. By using Perlin Noise I shaped simple lines into a wave-like form to recreate the look of it. It was very difficult to achieve this kind of look and I had to experiment a lot with values and colors. Since I am a big fan of the movie I wanted it to be 'perfect' and put a lot of effort into this project. I am very happy with the result and the music in the background makes it even better."
  }
]
